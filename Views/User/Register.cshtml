@model vmRegister

@{
    ViewData["Title"] = "使用者註冊";
    Layout = "_LayoutLite";
    List<SelectListItem> GenderList = new List<SelectListItem>();
    using var codeData = new z_sqlCodeDatas();
    GenderList = codeData.GetDropDownList("Gender", false);
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal  mt-2">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.UserNo, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.EditorFor(model => model.UserNo, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserNo, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.GenderCode, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.DropDownListFor(model => model.GenderCode, GenderList, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.GenderCode, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.Tel, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.EditorFor(model => model.Tel, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Tel, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-3">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
        </div>
        <div class="col-md-9">
            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
        </div>
    </div>
    <hr>
    <div class="row form-group">
        <div class="col-md-12">
            <div class="float-start">
                <input type="submit" value="註冊帳號" class="btn btn-primary" />
            </div>
            <div class="float-end">
                @Html.ActionLink("回登入頁", "Login", "User", new { area = "" }, new { @class = "btn btn-success" })
            </div>
        </div>
    </div>
}