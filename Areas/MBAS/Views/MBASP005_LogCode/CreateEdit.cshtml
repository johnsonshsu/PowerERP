@model powererp.Models.LogCodes

@{
    string str_command = (Model.Id == 0) ? "新增" : "修改";
    ViewData["Title"] = $"資料{str_command}";
    Layout = "_LayoutAdmin";
    var code = new z_sqlCodeDatas();
    var LogLevelList = code.GetDropDownList("LogLevel", true);
    var LogIntervalList = code.GetDropDownList("LogInterval", true);
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal  mt-2">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        <div class="row form-group">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelRequiredFor(model => model.CodeNo)
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CodeNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CodeNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelRequiredFor(model => model.CodeName)
                    </div>
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.CodeName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.CodeName, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelRequiredFor(model => model.LogLevel)
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.LogLevel, LogLevelList , new { @class = "form-control selectpicker" , @data_live_search="true" })
                        @Html.ValidationMessageFor(model => model.LogLevel, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="row">
                    <div class="col-md-4">
                        @Html.LabelRequiredFor(model => model.LogInterval)
                    </div>
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.LogInterval, LogIntervalList , new { @class = "form-control selectpicker" , @data_live_search="true" })
                        @Html.ValidationMessageFor(model => model.LogInterval, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row form-group">
            <div class="col-md-2">
                @Html.LabelRequiredFor(model => model.Remark)
            </div>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
            </div>
        </div>
        @await Html.PartialAsync("_PartialFormSubmit")
    </div>
}