@model IEnumerable<powererp.Models.Users>

@{
    ViewData["Title"] = SessionService.PrgName;
    Layout = "_LayoutAdmin";
    var value = TempData.Get<FormSecurity>("FormSecurity");
}

@await Html.PartialAsync("_PartialFormHeader")
<div class="table-responsive">
    <table class="table table-bordered mb-0">
        <thead class="table-secondary">
            <tr>
                @if (value.IsAddEditDelete && !SessionService.IsReadonlyMode)
                {
                    <th>
                        @await Html.PartialAsync("_PartialFormCreate")
                    </th>
                }
                <th>
                    @await Html.PartialAsync("_PartialFormFunction")
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.IsValid)
                </th>
                <th class="fixedcolumn">
                    @Html.DisplayNameSortFor(model => model.UserNo)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.UserName)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.CodeName)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.GenderName)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.DeptName)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.TitleName)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.ContactEmail)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.ContactTel)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.ContactAddress)
                </th>
                <th>
                    @Html.DisplayNameSortFor(model => model.Remark)
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                SessionService.RowId = item.Id;
                SessionService.RowData = $"{item.UserNo} {item.UserName}";
                <tr>
                    @if (value.IsAddEditDelete && !SessionService.IsReadonlyMode)
                    {
                        <td>
                            @await Html.PartialAsync("_PartialFormEdit")
                            @await Html.PartialAsync("_PartialFormDelete")
                        </td>
                    }
                    <td>
                        @Html.ActionLink("重設密碼", "ResetPassword",
                        ActionService.Controller, new { area = ActionService.Area, id = SessionService.RowId }, new
                        { @class = "btn btn-warning", @onclick = "return confirm('是否確定要重設密碼?');" })
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.IsValid)
                </td>
                <td class="fixedcolumn fixedcolumn-data">
                    @Html.DisplayFor(modelItem => item.UserNo)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.CodeName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.GenderName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.DeptName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TitleName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactEmail)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactTel)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ContactAddress)
                </td>
                <td class="table-wrap">
                    @Html.DisplayFor(modelItem => item.Remark)
                </td>
            </tr>
                        }
        </tbody>
    </table>
</div>