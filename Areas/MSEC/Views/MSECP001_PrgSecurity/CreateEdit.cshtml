@model powererp.Models.Securitys

@{
    string str_command = (Model.Id == 0) ? "新增" : "修改";
    ViewData["Title"] = $"資料{str_command}";
    Layout = "_LayoutAdmin";
    var user = new z_sqlUsers();
    var UserList = user.GetDropDownList(true);
    UserList.Where(m => m.Value == Model.TargetNo).ToList().ForEach(m => m.Selected = true);
}

@using (Html.BeginForm())
{
@Html.AntiForgeryToken()
<div class="form-horizontal  mt-2">
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)

    <div class="row form-group">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.TargetName)
                </div>
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.TargetNo, UserList , new { @class = "form-control selectpicker"
                                        , @data_live_search = "true" } )
                    @Html.ValidationMessageFor(model => model.TargetNo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsAdd)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsAdd, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsAdd, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsEdit)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsEdit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsEdit, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsDelete)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsDelete, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsDelete, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsConfirm)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsConfirm, new { htmlAttributes = new { @class = "form-control" }
                                        })
                    @Html.ValidationMessageFor(model => model.IsConfirm, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsUndo)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsUndo, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsUndo, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsCancel)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsCancel, new { htmlAttributes = new { @class = "form-control" }
                                        })
                    @Html.ValidationMessageFor(model => model.IsCancel, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsUpload)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsUpload, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsUpload, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsDownload)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsDownload, new { htmlAttributes = new { @class = "form-control" }
                                        })
                    @Html.ValidationMessageFor(model => model.IsDownload, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-4">
                    @Html.LabelRequiredFor(model => model.IsPrint)
                </div>
                <div class="col-md-8">
                    @Html.CheckBoxFor(model => model.IsPrint, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IsPrint, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>
    <div class="row form-group">
        <div class="col-md-12">
            <div class="row">
                <div class="col-md-2">
                    @Html.LabelRequiredFor(model => model.Remark)
                </div>
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Remark, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Remark, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("_PartialFormSubmit")
</div>
}